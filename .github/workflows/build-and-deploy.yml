name: Build and Deploy
on:
  push:
    branches:
      - note
  pull_request:
    branches:
      - note

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      BASE_PATH: /notes
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: '18.x'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}

      - name: Cache Rust toolchain and dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Install npm dependencies
        run: npm ci

      - name: Pre Build üîß
        run: |
          export REPOSITORY_NAME=${{ github.repository }}
          npm run meta
          npm run prebuild

      - name: Cache Wasm-pack and Twiggy
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/wasm-pack
            ~/.cargo/bin/twiggy
          key: ${{ runner.os }}-wasm-pack-twiggy-${{ hashFiles('**/Cargo.lock') }}

      # - name: Install Rust
      #   run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      # - name: Install wasm-pack
      #   run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install Wasm-pack and Twiggy
        run: |
          cargo install wasm-pack
          cargo install twiggy

      # - name: Update Rust
      #   run: rustup update stable

      - name: Install binaryen
        run: sudo apt-get -y install binaryen

      # - name: Install twiggy
      #   run: cargo install twiggy

      - name: Build WASM üöÄ
        run: npm run generate

      - name: Build project
        run: npm run build

      - name: Export Static Assets
        run: npm run export && touch out/.nojekyll

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@4.1.3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: out
          CLEAN: true
          COMMIT_MESSAGE: 'chore: deploy to gh-pages'
